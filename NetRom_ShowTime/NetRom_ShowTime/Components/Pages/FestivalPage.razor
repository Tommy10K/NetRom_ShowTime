@page "/festivals/{Id:int}"
@using ShowTime.BusinessLogic.Abstractions
@using ShowTime.BusinessLogic.Dtos
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Authorization

@inject IFestivalService FestivalService
@inject NavigationManager Nav

@rendermode InteractiveServer

@attribute [Authorize(Roles = "User")]

@if (festival == null)
{
    <p><em>Loading…</em></p>
}
else
{
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-12 col-md-5 mb-4">
                <div class="card h-120">
                    <div class="ratio" style="--bs-aspect-ratio:130%;">
                        <img src="@festival.SplashArt"
                             class="card-img-top"
                             style="object-fit: cover;"
                             alt="@festival.Name" />
                    </div>
                </div>
            </div>

            <div class="col-12 col-md-7 mb-4">
                <div class="card h-120">
                    <div class="card-body">
                        <h3 class="card-title">@festival.Name</h3>
                        <p class="card-text"><strong>Location:</strong> @festival.Location</p>
                        <p class="card-text mb-1">
                            <strong>Start Date:</strong> @festival.StartDate.ToString("yyyy-MM-dd")
                        </p>
                        <p class="card-text mb-3">
                            <strong>End Date:</strong> @festival.EndDate.ToString("yyyy-MM-dd")
                        </p>
                        <button class="btn btn-secondary"
                                @onclick='() => Nav.NavigateTo("/festivals")'>
                            Back to Festivals
                        </button>
                        <button class="btn btn-success"
                                @onclick='() => Nav.NavigateTo($"/buytickets/{festival.Id}")'>
                            Get Tickets
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int Id { get; set; }

    private FestivalGetDto? festival;

    protected override async Task OnInitializedAsync()
    {
        festival = await FestivalService.GetFestivalByIdAsync(Id);
        if (festival is null)
            Nav.NavigateTo("/festivals");
    }
}

