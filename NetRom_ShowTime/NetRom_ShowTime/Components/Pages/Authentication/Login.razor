@page "/login"
@using Microsoft.AspNetCore.Authentication
@using ShowTime.BusinessLogic.Abstractions
@using ShowTime.BusinessLogic.Dtos
@using NetRom_ShowTime.Components
@using BlazorBootstrap
@using Microsoft.AspNetCore.Components.Forms
@using System.Security.Claims
@using System
@using ShowTime.DataAccess.Models
@using Microsoft.AspNetCore.Authentication.Cookies;

@inject IUserService UserService
@inject NavigationManager NavigationManager
@inject HttpClient Http

<h3>Login</h3>

<EditForm Model="newUser" OnValidSubmit="Authenticate" FormName="Login">
    <DataAnnotationsValidator />

    <label for="email">Email:</label>
    <InputText id="email" @bind-Value="newUser.Email" class="form-control mb-2" />
    <ValidationMessage For="@(() => newUser.Email)" />

    <label for="password">Password:</label>
    <InputText id="password" type="password" @bind-Value="newUser.Password" class="form-control mb-2" />
    <ValidationMessage For="@(() => newUser.Password)" />

    <button type="submit" class="btn btn-primary mt-2 mb-3">Log In</button>
</EditForm>

@code {
    [SupplyParameterFromForm]
    private LogInDto newUser { get; set; } = new();

    private async Task Authenticate()
    {
        var url = NavigationManager.BaseUri.TrimEnd('/') + "/api/login";
        var resp = await Http.PostAsJsonAsync(url, newUser);
        if (resp.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/", forceLoad: true);
        }
        else
        {
            Console.WriteLine("Login failed. Please check your credentials.");
        }
    }
}
