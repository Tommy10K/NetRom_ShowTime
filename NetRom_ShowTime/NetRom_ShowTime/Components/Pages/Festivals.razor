@page "/festivals"
@using ShowTime.BusinessLogic.Abstractions
@using ShowTime.BusinessLogic.Dtos
@using NetRom_ShowTime.Components
@using BlazorBootstrap
@using Microsoft.AspNetCore.Components.Forms

@inject IFestivalService FestivalService

@rendermode InteractiveServer

<h3>Festivals</h3>

<EditForm Model="newFestival" OnValidSubmit="AddFestival">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label for="name" class="form-label">Name</label>
        <InputText id="name"
                   @bind-Value="newFestival.Name"
                   class="form-control" />
        <ValidationMessage For="@(() => newFestival.Name)" />
    </div>

    <div class="mb-3">
        <label for="location" class="form-label">Location</label>
        <InputText id="location"
                   @bind-Value="newFestival.Location"
                   class="form-control" />
        <ValidationMessage For="@(() => newFestival.Location)" />
    </div>

    <div class="mb-3">
        <label for="startDate" class="form-label">Start Date</label>
        <InputDate DateTimeFormat="yyyy-MM-dd"
                   id="startDate"
                   @bind-Value="newFestival.StartDate"
                   class="form-control" />
        <ValidationMessage For="@(() => newFestival.StartDate)" />
    </div>

    <div class="mb-3">
        <label for="endDate" class="form-label">End Date</label>
        <InputDate DateTimeFormat="yyyy-MM-dd"
                   id="endDate"
                   @bind-Value="newFestival.EndDate"
                   class="form-control" />
        <ValidationMessage For="@(() => newFestival.EndDate)" />
    </div>

    <div class="mb-3">
        <label for="splashArt" class="form-label">Splash Art URL</label>
        <InputText id="splashArt"
                   @bind-Value="newFestival.SplashArt"
                   class="form-control" />
        <ValidationMessage For="@(() => newFestival.SplashArt)" />
    </div>

    <div class="mb-3">
        <label for="capacity" class="form-label">Capacity</label>
        <InputNumber id="capacity"
                     @bind-Value="newFestival.Capacity"
                     class="form-control" />
        <ValidationMessage For="@(() => newFestival.Capacity)" />
    </div>

    <button type="submit" class="btn btn-primary mb-4">
        Add Festival
    </button>
</EditForm>

@if (!festivals.Any())
{
    <p class="text-center">No festivals registered</p>
}
else
{
    <div class="row">
        @foreach (var f in festivals)
        {
            <div class="col-sm-6 col-md-4 col-lg-3 mb-4">
                <NavLink class="text-decoration-none text-reset"
                         href="@($"/festivals/{f.Id}")">
                    <div class="card h-120">
                        <div class="ratio" style="--bs-aspect-ratio:130%;">
                            <img src="@f.SplashArt"
                                 alt="@f.Name"
                                 class="card-img-top"
                                 style="object-fit: cover;" />
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">@f.Name</h5>
                            <p class="card-text">@f.Location</p>
                        </div>
                    </div>
                </NavLink>
            </div>
        }
    </div>
}


@code {
    [SupplyParameterFromForm]
    private FestivalCreateDto newFestival { get; set; } = new FestivalCreateDto
    {
        StartDate = DateTime.Today,
        EndDate = DateTime.Today
    };

    private IList<FestivalGetDto> festivals = new List<FestivalGetDto>();

    private async Task AddFestival()
    {
        await FestivalService.AddFestivalAsync(newFestival);
        newFestival = new FestivalCreateDto
        {
            StartDate = DateTime.Today,
            EndDate = DateTime.Today
        };
        festivals = await FestivalService.GetAllFestivalsAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        festivals = await FestivalService.GetAllFestivalsAsync();
    }
}
